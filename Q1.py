# -*- coding: utf-8 -*-
"""Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kRlrY8wmlK3tL1eVCb_mUvNxWXF05g4N
"""

import numpy as np
import pandas as pd
import random

train_df=pd.read_csv('/1fe720be-90e4-4e06-9b52-9de93e0ea937_train.csv')

test_df=pd.read_csv('/f6eb0bd7-6063-4e50-baa0-111feda638fb_test.csv')

def train_validation_split(df,validation_size):
    indices=df.index.tolist()
    validation_indices=random.sample(population=indices,k=validation_size)
    validation_df=df.loc[validation_indices]
    train_df=df.drop(validation_indices)
    
    return train_df,validation_df
validation_size=(int)(0.2*len(train_df))
train_df,validation_df=train_validation_split(train_df,validation_size)









from sklearn.feature_extraction.text import CountVectorizer
count_vect=CountVectorizer()
train_counts=count_vect.fit(df["text"])
train_count_vector=train_counts.transform(train_df["text"])
train_count_vector.shape

validation_counts=count_vect.fit(df["text"])
validation_count_vector=train_counts.transform(validation_df["text"])
validation_count_vector.shape

test_counts=count_vect.fit(df["text"])
test_count_vector=train_counts.transform(test_df["text"])
test_count_vector.shape

from sklearn import svm
from sklearn.metrics import accuracy_score

svc=svm.SVC(kernel='rbf', probability=True,C=1)
svc.fit(train_count_vector,train_df["labels"])
y_pred=svc.predict(validation_count_vector)
print("Accuracy:",accuracy_score(y_pred,validation_df["labels"]))

predictions=svc.predict(test_count_vector)

dicti={}
dicti['label']=predictions

from google.colab import files
pd.DataFrame(dicti).to_csv('submission.csv',index=False) 
files.download('submission.csv')



